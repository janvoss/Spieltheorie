[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spieltheorie und Verhaltensökonomik",
    "section": "",
    "text": "Organisatorisches\n\n\n\n\n\n\n\n\\({}\\)\n\\({}\\)\n\n\n\n\n\n\n\n\n\n\nUnterlagen: https://janvoss.github.io/Spieltheorie/\nModul: 203-039 Wettbewerb und Staat I Modulhandbuch\nWeitere Veranstaltung im ModuL: Industrie- und Regulierungsökonomik, Wettbewerbspolitik\nPrüfungsleistung: K60, diese VL davon 50%",
    "crumbs": [
      "Organisatorisches"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Einleitung",
    "section": "",
    "text": "1.1 Ökomomische Modellierung menschlichen Verhaltens",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einleitung</span>"
    ]
  },
  {
    "objectID": "Literatur.html",
    "href": "Literatur.html",
    "title": "Literatur",
    "section": "",
    "text": "Beck, Hanno. 2014. Behavioral Economics: Eine Einführung. Wiesbaden.\n\n\nBerninghaus, Siegfried K., Karl-Martin Ehrhart, and Werner Güth. 2010. Strategische Spiele. Springer-Lehrbuch. Berlin, Heidelberg: Springer. https://doi.org/10.1007/978-3-642-11651-3.\n\n\nDetel, Wolfgang. 2007. Grundkurs Philosophie. Band 5: Philosophie des Sozialen. Stuttgart.\n\n\nGigerenzer, Gerd. 2018. “The Bias Bias in Behavioral Economics.” Review of Behavioral Economics 5: 303–36.\n\n\nHoller, Manfred J., Gerhard Illing, and Stefan Napel. 2019. Einführung in die Spieltheorie. Berlin, Heidelberg: Springer. https://doi.org/10.1007/978-3-642-31963-1.\n\n\nJust, David R. 2014. Introduction to Behavioral Economics. Noneconomic Factors That Shape Economic Decisions. Hoboken NJ.\n\n\nLee, Dwight R., and J. R. Clark. 2017. “Can Behavioral Economists Improve Economic Rationality?” Public Choice 174: 1–18.\n\n\nMusgrave, Allen. 1981. “Unreal Assumptions in Economic Theory. The f-Twist Untwisted.” Kyklos 34: 377–87.\n\n\nWeintraub, E. Roy. 2017. “Game Theory and Cold War Rationality: A Review Essay.” Journal of Economic Literature 55: 148–61.\n\n\nWinter, Stefan. 2019. Grundzüge der Spieltheorie. Ein Lehr- und Arbeitsbuch für das (Selbst-)Studium. Berlin Heidelberg.",
    "crumbs": [
      "Literatur"
    ]
  },
  {
    "objectID": "intro.html#ökomomische-modellierung-menschlichen-verhaltens",
    "href": "intro.html#ökomomische-modellierung-menschlichen-verhaltens",
    "title": "1  Einleitung",
    "section": "",
    "text": "Methodologischer Individualismus\n\nSituationslogik erlaubt Verknüpfung von Situation, Zielen und Handlung\nRationalität\n\nStrenge Rationalität\nBeschränkte Rationalität\nVerhaltensökonomik\n\nRationalität als Konzept\nRationalität als Behauptung über einen Sachverhalt\nRationalität als Analysegrammatik",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einleitung</span>"
    ]
  },
  {
    "objectID": "intro.html#formen-des-wettbewerbs",
    "href": "intro.html#formen-des-wettbewerbs",
    "title": "1  Einleitung",
    "section": "1.2 Formen des Wettbewerbs",
    "text": "1.2 Formen des Wettbewerbs\n-Vollkommener Wettbewerb auf Märkten - Innovationswettbewerb - Entdeckungswettbewerb - \\(\\dots\\)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einleitung</span>"
    ]
  },
  {
    "objectID": "intro.html#arenen-des-wettbewerbs",
    "href": "intro.html#arenen-des-wettbewerbs",
    "title": "1  Einleitung",
    "section": "1.3 Arenen des Wettbewerbs",
    "text": "1.3 Arenen des Wettbewerbs\n\nMärkte\nOrganisationen\n\ndurch Märkte diszipliniert (Unternehmen)\nnicht durch Märkte diszipliniert (Behörden, Vereine, \\(\\dots\\))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einleitung</span>"
    ]
  },
  {
    "objectID": "intro.html#fazit-zum-modul",
    "href": "intro.html#fazit-zum-modul",
    "title": "1  Einleitung",
    "section": "1.4 Fazit zum Modul",
    "text": "1.4 Fazit zum Modul\n\\(\\rightarrow\\) Im Modul befassen wir uns mit Wettbewerb in unterschiedlichen Kontexten\n\\(\\rightarrow\\) Basis der Überlegungen sind (unterschiedliche) Konzepte über menschliches Verhalten",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einleitung</span>"
    ]
  },
  {
    "objectID": "Rationalitaet.html",
    "href": "Rationalitaet.html",
    "title": "2  Rationalität",
    "section": "",
    "text": "2.1 Basisschema der Handlungserklärung\nDas Basisschema ist noch unvollständig:\n\\(\\Rightarrow\\) erweitertes Schema der Handlungserklärung",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationalität</span>"
    ]
  },
  {
    "objectID": "Rationalitaet.html#basisschema-der-handlungserklärung",
    "href": "Rationalitaet.html#basisschema-der-handlungserklärung",
    "title": "2  Rationalität",
    "section": "",
    "text": "Person \\(S\\) wünscht, Ziel \\(Z\\) zu realisieren.\n\\(S\\) glaubt, die Handlung \\(H\\) sei ein Mittel, um \\(Z\\) zu realisieren.\n\\(S\\) vollzieht Handlung \\(H\\).\n\n\n\nWas ist, wenn es für \\(S\\) bessere Handlungen als \\(H\\) gibt, \\(Z\\) zu realisieren? Dann wäre es nicht vernünftig, \\(H\\) zu vollziehen.\nWas ist, wenn es \\(S\\) \\(H\\) gar nicht vollziehen kann?\nWas ist, wenn \\(H\\) mit negativen Folgen einhergeht, die schlimmer sind, als \\(Z\\) nicht zu realisieren?\nWas ist, wenn \\(S\\) noch weitere Ziele realisieren will, die mit \\(Z\\) nicht vereinbar sind?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationalität</span>"
    ]
  },
  {
    "objectID": "Rationalitaet.html#erweitertes-schema-der-handlungserklärung",
    "href": "Rationalitaet.html#erweitertes-schema-der-handlungserklärung",
    "title": "2  Rationalität",
    "section": "2.2 Erweitertes Schema der Handlungserklärung",
    "text": "2.2 Erweitertes Schema der Handlungserklärung\n\n\\(S\\) hat die Absicht, Ziel \\(Z\\) zu realisieren.\n\\(S\\) glaubt, dass, wenn sie Handlung \\(H\\) vollzieht, sie somit \\(Z\\) realisieren kann.\n\\(S\\) glaubt in der Lage zu sein, \\(Z\\) zu realisieren und \\(H\\) zu vollziehen.\n\\(S\\) weiß, wie man \\(Z\\) realisiert und \\(H\\) vollzieht.\n\\(S\\) glaubt nicht, dass es etwas Besseres gibt als \\(H\\), um \\(Z\\) zu realisieren.\n\\(S\\) glaubt nicht, dass der Vollzug von \\(H\\) Folgen hat, die schlimmer sind als nicht \\(Z\\) realisieren zu können.\n\\(S\\) hat nicht die Absicht, ein Ziel zu realisieren, von dem \\(S\\) weiß, dass es unvereinbar damit ist, \\(Z\\) zu realisieren, und das sie \\(Z\\) gegenüber vorzieht.\n\\(S\\) vollzieht Handlung \\(H\\).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationalität</span>"
    ]
  },
  {
    "objectID": "Rationalitaet.html#zwischenfazit",
    "href": "Rationalitaet.html#zwischenfazit",
    "title": "2  Rationalität",
    "section": "2.3 Zwischenfazit",
    "text": "2.3 Zwischenfazit\n\nErklärungen rationaler Handlungen unterstellen nicht zwangsläufig, dass die handelnde Person “alles richtig” macht.\nInsbesondere lässt es beschränkte Handlungsmöglichkeiten zu und unvollständige oder fehlerhafte Informationslagen.\nDas Rationalprinzip ist weniger eine Behauptung über die handelnde Person, sondern ein Schema, eine “Grammatik” der Erklärung.\nDiese Grammatik verwenden wir sowohl in der Spieltheorie als auch in der Verhaltensökonomik\n\nSchwerpunkt Spieltheorie: Individuen handeln nach (dem richtigen) mathematischen Kalkül und machen höchstens zufällig Fehler\n\nSchwerpunkt Verhaltensökonomik: Individuen handeln nachvollziehbar, aber nach Kalkülen, die nicht ganz “richtig” sind.\n\n\n\n\n\n\nDetel, Wolfgang. 2007. Grundkurs Philosophie. Band 5: Philosophie des Sozialen. Stuttgart.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Rationalität</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html",
    "href": "Spieltheorie.html",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "",
    "text": "3.1 Einleitung und begriffliche Einordnung",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html#das-nash-gleichgewicht",
    "href": "Spieltheorie.html#das-nash-gleichgewicht",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "3.2 Das Nash-Gleichgewicht",
    "text": "3.2 Das Nash-Gleichgewicht",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html#simultane-spiele",
    "href": "Spieltheorie.html#simultane-spiele",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "3.3 Simultane Spiele",
    "text": "3.3 Simultane Spiele\n\n3.3.1 Grundsätzliche Struktur eines Spiels\n\n\n\nAllgemeines Struktur eines Spiels\n\n\n\n\n3.3.2 Reine Strategien\n\n3.3.2.1 Definition Nash-Gleichgewicht\nEin Nash-Gleichgewicht liegt vor, wenn jeder Spieler die beste Antwort auf die beste Strategie des Gegenspielers spielt.\nFormal:\n\\(u_{i}\\left(s_{i}^{*},s_{-i}^{*}\\right)\\geq u_{i}\\left(s_{i},s_{-i}^{*}\\right)\\mbox{ für alle }i,\\mbox{ }s_{i}\\in S_{i}\\)\nIntuition: Ein Nash-Gleichgewicht liegt vor, wenn kein Spieler mehr die Möglichkeit hat, seine Situation durch eine nur eigene Entscheidungsänderung zu verbessern.\nIn der Matrix oben heißt dass, das geprüft werden muss\n\\(A  \\geq B \\land a  \\geq c\\) \\(\\rightarrow\\) ol\n\\(B  \\geq A \\land b  \\geq d\\) \\(\\rightarrow\\) ul\n\\(C  \\geq D \\land c  \\geq a\\) \\(\\rightarrow\\) or\n\\(D  \\geq C \\land d  \\geq b\\) \\(\\rightarrow\\) ur\nEs kann kein oder ein Nash-Gleichgewicht existieren oder mehrere Nash-Gleichgewichte\n\n\n3.3.2.2 Einperiodige Spiele\n\n\nCode\nimport numpy as np\n\nimport random\n\n# Zufällige Ganzzahlen zwischen 0 und 9 generieren\nA = random.randint(0, 9)\nB = random.randint(0, 9)\nC = random.randint(0, 9)\nD = random.randint(0, 9)\na = random.randint(0, 9)\nb = random.randint(0, 9)\nc = random.randint(0, 9)\nd = random.randint(0, 9)\n\n# Formatierte Bimatrix ausgeben\nprint(\"    l   r\")\nprint(f\"o  {A},{a}  {C},{c}\")\nprint(f\"u  {B},{b}  {D},{d}\")\n\n\n# Funktionen für Nash-Bedingungen\ndef is_ol_nash(A, B, a, c):\n  return \"ol\" if (A &gt;= B) and (a &gt;= c) else \"not_ol\"\n\ndef is_ul_nash(B, A, b, d):\n  return \"ul\" if (B &gt;= A) and (b &gt;= d) else \"not_ul\"\n\ndef is_or_nash(C, D, c, a):\n  return \"or\" if (C &gt;= D) and (c &gt;= a) else \"not_or\"\n\ndef is_ur_nash(D, C, d, b):\n  return \"ur\" if (D &gt;= C) and (d &gt;= b) else \"not_ur\"\n\n# Nash-Bedingungen überprüfen und Strings zuweisen\nCand_Nash_ol = is_ol_nash(A, B, a, c)\nCand_Nash_ul = is_ul_nash(B, A, b, d)\nCand_Nash_or = is_or_nash(C, D, c, a)\nCand_Nash_ur = is_ur_nash(D, C, d, b)\n\n# Ergebnisse kombinieren und NAs entfernen\nNash_GG = np.array([Cand_Nash_ol, Cand_Nash_ul, Cand_Nash_or, Cand_Nash_ur])\nNash_GG_filtered = []\nfor element in Nash_GG:\n  if element == \"ol\" or element == \"ul\" or element == \"or\" or element == \"ur\":\n    Nash_GG_filtered.append(element)\n\n# Ergebnis ausgeben\n#print(Nash_GG_filtered)\n\n\n    l   r\no  4,3  7,7\nu  5,4  8,9\n\n\n\n\nCode\nprint(Nash_GG_filtered)\n\n\n['ur']\n\n\n\n3.3.2.2.1 Koordinationsspiel\n\n\n\nKoordinationsspiel\n\n\n\n\nCode\nimport numpy as np\n\nimport random\n\n# Zufällige Ganzzahlen zwischen 0 und 9 generieren\nA = 0\nB = random.randint(1, 9)\nC = B\nD = A\na = A\nb = B\nc = C\nd = D\n\n# Formatierte Bimatrix ausgeben\nprint(\"    l   r\")\nprint(f\"o  {A},{a}  {C},{c}\")\nprint(f\"u  {B},{b}  {D},{d}\")\n\n\n# Funktionen für Nash-Bedingungen\ndef is_ol_nash(A, B, a, c):\n  return \"ol\" if (A &gt;= B) and (a &gt;= c) else \"not_ol\"\n\ndef is_ul_nash(B, A, b, d):\n  return \"ul\" if (B &gt;= A) and (b &gt;= d) else \"not_ul\"\n\ndef is_or_nash(C, D, c, a):\n  return \"or\" if (C &gt;= D) and (c &gt;= a) else \"not_or\"\n\ndef is_ur_nash(D, C, d, b):\n  return \"ur\" if (D &gt;= C) and (d &gt;= b) else \"not_ur\"\n\n# Nash-Bedingungen überprüfen und Strings zuweisen\nCand_Nash_ol = is_ol_nash(A, B, a, c)\nCand_Nash_ul = is_ul_nash(B, A, b, d)\nCand_Nash_or = is_or_nash(C, D, c, a)\nCand_Nash_ur = is_ur_nash(D, C, d, b)\n\n# Ergebnisse kombinieren und NAs entfernen\nNash_GG = np.array([Cand_Nash_ol, Cand_Nash_ul, Cand_Nash_or, Cand_Nash_ur])\nNash_GG_filtered = []\nfor element in Nash_GG:\n  if element == \"ol\" or element == \"ul\" or element == \"or\" or element == \"ur\":\n    Nash_GG_filtered.append(element)\n\n# Ergebnis ausgeben\nprint(Nash_GG_filtered)\n\n\n    l   r\no  0,0  5,5\nu  5,5  0,0\n['ul', 'or']\n\n\n\n\n3.3.2.2.2 Chicken Game\n\n\n\nChicken Game\n\n\n\n\nCode\nimport numpy as np\n\nimport random\n\n# Zufällige Ganzzahlen zwischen 0 und 9 generieren\nA = random.randint(5, 7)\nB = random.randint(8, 9)\nC = random.randint(2, 4)\nD = random.randint(0, 1)\na = random.randint(5, 7)\nb = random.randint(2, 4)\nc = random.randint(8, 9)\nd = random.randint(0, 1)\n\n# Formatierte Bimatrix ausgeben\nprint(\"    l   r\")\nprint(f\"o  {A},{a}  {C},{c}\")\nprint(f\"u  {B},{b}  {D},{d}\")\n\n\n# Funktionen für Nash-Bedingungen\ndef is_ol_nash(A, B, a, c):\n  return \"ol\" if (A &gt;= B) and (a &gt;= c) else \"not_ol\"\n\ndef is_ul_nash(B, A, b, d):\n  return \"ul\" if (B &gt;= A) and (b &gt;= d) else \"not_ul\"\n\ndef is_or_nash(C, D, c, a):\n  return \"or\" if (C &gt;= D) and (c &gt;= a) else \"not_or\"\n\ndef is_ur_nash(D, C, d, b):\n  return \"ur\" if (D &gt;= C) and (d &gt;= b) else \"not_ur\"\n\n# Nash-Bedingungen überprüfen und Strings zuweisen\nCand_Nash_ol = is_ol_nash(A, B, a, c)\nCand_Nash_ul = is_ul_nash(B, A, b, d)\nCand_Nash_or = is_or_nash(C, D, c, a)\nCand_Nash_ur = is_ur_nash(D, C, d, b)\n\n# Ergebnisse kombinieren und NAs entfernen\nNash_GG = np.array([Cand_Nash_ol, Cand_Nash_ul, Cand_Nash_or, Cand_Nash_ur])\nNash_GG_filtered = []\nfor element in Nash_GG:\n  if element == \"ol\" or element == \"ul\" or element == \"or\" or element == \"ur\":\n    Nash_GG_filtered.append(element)\n\n# Ergebnis ausgeben\nprint(Nash_GG_filtered)\n\n\n    l   r\no  6,7  2,9\nu  8,4  1,0\n['ul', 'or']\n\n\n\n\n3.3.2.2.3 Geschlechterkampf\n\n\n\nGeschlechterkampf\n\n\n\n\nCode\nimport numpy as np\n\nimport random\n\n# Zufällige Ganzzahlen zwischen 0 und 9 generieren\nA = random.randint(8, 9)\nB = random.randint(0, 2)\nC = random.randint(3, 5)\nD = random.randint(6, 7)\na = random.randint(6, 7)\nb = random.randint(0, 2)\nc = random.randint(3, 5)\nd = random.randint(8, 9)\n\n# Formatierte Bimatrix ausgeben\nprint(\"    l   r\")\nprint(f\"o  {A},{a}  {C},{c}\")\nprint(f\"u  {B},{b}  {D},{d}\")\n\n\n# Funktionen für Nash-Bedingungen\ndef is_ol_nash(A, B, a, c):\n  return \"ol\" if (A &gt;= B) and (a &gt;= c) else \"not_ol\"\n\ndef is_ul_nash(B, A, b, d):\n  return \"ul\" if (B &gt;= A) and (b &gt;= d) else \"not_ul\"\n\ndef is_or_nash(C, D, c, a):\n  return \"or\" if (C &gt;= D) and (c &gt;= a) else \"not_or\"\n\ndef is_ur_nash(D, C, d, b):\n  return \"ur\" if (D &gt;= C) and (d &gt;= b) else \"not_ur\"\n\n# Nash-Bedingungen überprüfen und Strings zuweisen\nCand_Nash_ol = is_ol_nash(A, B, a, c)\nCand_Nash_ul = is_ul_nash(B, A, b, d)\nCand_Nash_or = is_or_nash(C, D, c, a)\nCand_Nash_ur = is_ur_nash(D, C, d, b)\n\n# Ergebnisse kombinieren und NAs entfernen\nNash_GG = np.array([Cand_Nash_ol, Cand_Nash_ul, Cand_Nash_or, Cand_Nash_ur])\nNash_GG_filtered = []\nfor element in Nash_GG:\n  if element == \"ol\" or element == \"ul\" or element == \"or\" or element == \"ur\":\n    Nash_GG_filtered.append(element)\n\n# Ergebnis ausgeben\nprint(Nash_GG_filtered)\n\n\n    l   r\no  8,6  3,5\nu  2,0  6,9\n['ol', 'ur']\n\n\n\n\n3.3.2.2.4 Gefangenendilemma\n\n\n\nGefangenendilemma\n\n\n\n\nCode\nimport numpy as np\n\nimport random\n\n# Zufällige Ganzzahlen zwischen 0 und 9 generieren\nA = random.randint(5, 7)\nB = random.randint(8, 9)\nC = random.randint(0, 1)\nD = random.randint(2, 4)\na = random.randint(5, 8)\nb = random.randint(0, 1)\nc = random.randint(8, 9)\nd = random.randint(2, 4)\n\n# Formatierte Bimatrix ausgeben\nprint(\"    l   r\")\nprint(f\"o  {A},{a}  {C},{c}\")\nprint(f\"u  {B},{b}  {D},{d}\")\n\n\n# Funktionen für Nash-Bedingungen\ndef is_ol_nash(A, B, a, c):\n  return \"ol\" if (A &gt;= B) and (a &gt;= c) else \"not_ol\"\n\ndef is_ul_nash(B, A, b, d):\n  return \"ul\" if (B &gt;= A) and (b &gt;= d) else \"not_ul\"\n\ndef is_or_nash(C, D, c, a):\n  return \"or\" if (C &gt;= D) and (c &gt;= a) else \"not_or\"\n\ndef is_ur_nash(D, C, d, b):\n  return \"ur\" if (D &gt;= C) and (d &gt;= b) else \"not_ur\"\n\n# Nash-Bedingungen überprüfen und Strings zuweisen\nCand_Nash_ol = is_ol_nash(A, B, a, c)\nCand_Nash_ul = is_ul_nash(B, A, b, d)\nCand_Nash_or = is_or_nash(C, D, c, a)\nCand_Nash_ur = is_ur_nash(D, C, d, b)\n\n# Ergebnisse kombinieren und NAs entfernen\nNash_GG = np.array([Cand_Nash_ol, Cand_Nash_ul, Cand_Nash_or, Cand_Nash_ur])\nNash_GG_filtered = []\nfor element in Nash_GG:\n  if element == \"ol\" or element == \"ul\" or element == \"or\" or element == \"ur\":\n    Nash_GG_filtered.append(element)\n\n# Ergebnis ausgeben\nprint(Nash_GG_filtered)\n\n\n    l   r\no  6,7  1,8\nu  9,1  3,3\n['ur']\n\n\n\n\n\n3.3.2.3 Wiederholte Spiele\n\n\n3.3.2.4 Trembling Hand\n\n\n\n3.3.3 Gemischte Strategien",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html#sequenzielle-spiele",
    "href": "Spieltheorie.html#sequenzielle-spiele",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "3.4 Sequenzielle Spiele",
    "text": "3.4 Sequenzielle Spiele\n\n3.4.1 Vollständige Information\n\n\n3.4.2 Unvollständige Information",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html#koalitionsspiele",
    "href": "Spieltheorie.html#koalitionsspiele",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "3.5 Koalitionsspiele",
    "text": "3.5 Koalitionsspiele",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Spieltheorie.html#evolutionäre-spiele",
    "href": "Spieltheorie.html#evolutionäre-spiele",
    "title": "3  Nicht-kooperative Spieltheorie",
    "section": "3.6 Evolutionäre Spiele",
    "text": "3.6 Evolutionäre Spiele",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Nicht-kooperative Spieltheorie</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html",
    "href": "Verhaltensoekonomik.html",
    "title": "4  Verhaltensökonomik",
    "section": "",
    "text": "4.1 Einleitung",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#unrealistische-annahmen-vs.-realistische-modellierung",
    "href": "Verhaltensoekonomik.html#unrealistische-annahmen-vs.-realistische-modellierung",
    "title": "4  Verhaltensökonomik",
    "section": "4.2 Unrealistische Annahmen vs. realistische Modellierung",
    "text": "4.2 Unrealistische Annahmen vs. realistische Modellierung",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#flat-rate-bias",
    "href": "Verhaltensoekonomik.html#flat-rate-bias",
    "title": "4  Verhaltensökonomik",
    "section": "4.3 Flat-Rate Bias",
    "text": "4.3 Flat-Rate Bias",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#die-prospect-theory",
    "href": "Verhaltensoekonomik.html#die-prospect-theory",
    "title": "4  Verhaltensökonomik",
    "section": "4.4 Die Prospect Theory",
    "text": "4.4 Die Prospect Theory",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#mental-accounting",
    "href": "Verhaltensoekonomik.html#mental-accounting",
    "title": "4  Verhaltensökonomik",
    "section": "4.5 Mental Accounting",
    "text": "4.5 Mental Accounting",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#der-status-quo-bias",
    "href": "Verhaltensoekonomik.html#der-status-quo-bias",
    "title": "4  Verhaltensökonomik",
    "section": "4.6 Der Status-quo Bias",
    "text": "4.6 Der Status-quo Bias",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#umgang-mit-risiken",
    "href": "Verhaltensoekonomik.html#umgang-mit-risiken",
    "title": "4  Verhaltensökonomik",
    "section": "4.7 Umgang mit Risiken",
    "text": "4.7 Umgang mit Risiken",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  },
  {
    "objectID": "Verhaltensoekonomik.html#kritische-diskussion-der-verhaltensökonomik",
    "href": "Verhaltensoekonomik.html#kritische-diskussion-der-verhaltensökonomik",
    "title": "4  Verhaltensökonomik",
    "section": "4.8 Kritische Diskussion der Verhaltensökonomik",
    "text": "4.8 Kritische Diskussion der Verhaltensökonomik",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Verhaltensökonomik</span>"
    ]
  }
]